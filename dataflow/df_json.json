{
	"name": "df_json",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json_Employee",
						"type": "DatasetReference"
					},
					"name": "sourceemployeejson"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csvfromjson",
						"type": "DatasetReference"
					},
					"name": "savejsoningen2"
				}
			],
			"transformations": [
				{
					"name": "dcjsoncolumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          firstName as string,",
				"          lastName as string,",
				"          gender as string,",
				"          age as integer,",
				"          address as (streetAddress as string, city as string, state as string),",
				"          phoneNumbers as (Phone as string, LandLine as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> sourceemployeejson",
				"sourceemployeejson derive(streetAddress = address.streetAddress,",
				"          city = address.city,",
				"          state = address.state,",
				"          phoneNumber = phoneNumbers.Phone,",
				"          LandLine = phoneNumbers.LandLine) ~> dcjsoncolumns",
				"dcjsoncolumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['jsontocsv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          firstName,",
				"          lastName,",
				"          gender,",
				"          age,",
				"          streetAddress,",
				"          city,",
				"          state,",
				"          phoneNumber,",
				"          LandLine",
				"     ),",
				"     partitionBy('hash', 1)) ~> savejsoningen2"
			]
		}
	}
}